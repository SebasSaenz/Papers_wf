setwd("/Users/sebastiansaenz/Documents/defence_rummen")
# Load libraries ---------------------------------------------------------------
pacman::p_load(tidyverse,
data.table,
pheatmap,
ggridges,
ggtext,
ggdist,
gghalves,
patchwork,
viridis)
# concatenate files ------------------------------------------------------------
all_paths <- list.files(path = "rawdata/padloc/csv/",
pattern = "*.csv",#List paths
full.names = TRUE)
all_content <- all_paths %>% #Join files
lapply(read.table,
header = TRUE,
sep =",",
encoding ="UTF-8")
all_filenames <- all_paths %>% #Manipulate file paths
basename() %>%
as.list()
all_lists <- mapply(c,
all_content,
all_filenames,
SIMPLIFY = FALSE)
all_result <- rbindlist(all_lists, fill = T)
names(all_result)[20] <- "genome" #change column name
# xxx -------------------------------------------------------------------------
quality_genomes <- read_tsv("rawdata/quality_report_genomes.tsv") %>%
rename(genome=Name)
taxonomy <- read_tsv("rawdata/new_gtdbtk.bac120.tsv") %>%
rename(genome = user_genome)
taxonomy <- read_tsv("rawdata/new_gtdbtk.bac120.tsv") %>%
rename(genome = user_genome)
hq_genomes <- read_tsv("rawdata/hq_genomes.txt")
taxonomy <- taxonomy %>%
select(genome, classification) %>%
rename_all(tolower) %>%
mutate(classification=str_replace_all(classification, "\\w+__", "")) %>%
separate(classification,
into=c("kingdom", "phylum", "class", "order", "family", "genus",
"species"),
sep=";") %>%
inner_join(hq_genomes)
quality_genomes %>%
filter(Completeness >= 90) %>%
summarise(mean = mean(Genome_Size),
sd = sd(Genome_Size))
#genus number of defence system
more_5_genomes <- taxonomy %>%
count(genus, name = "number_genomes") %>%
filter(number_genomes >= 10)
select_genus <- all_result %>%
select(genome, system.number, system) %>%
filter(!grepl('_other', system)) %>%
unique() %>%
mutate(genome = str_remove(genome, ".fasta_padloc.csv")) %>%
count(genome) %>%
group_by(genome) %>%
summarise(total = mean(n), .groups = "drop") %>%
right_join(taxonomy, by = "genome") %>%
mutate(total = replace_na(total, 0)) %>%
select(family, genus, total) %>%
group_by(family, genus) %>%
summarise(mean = mean(total),
sd = sd(total), .groups = "drop") %>%
filter(genus %in% more_5_genomes$genus,
!genus == "",
mean > 6) %>%
select(genus)
View(select_genus)
genus_ds_plot <- all_result %>%
select(genome, system.number, system) %>%
filter(!grepl('_other', system)) %>%
unique() %>%
mutate(genome = str_remove(genome, ".fasta_padloc.csv")) %>%
count(genome) %>%
group_by(genome) %>%
summarise(total = mean(n), .groups = "drop") %>%
right_join(taxonomy, by = "genome") %>%
mutate(total = replace_na(total, 0)) %>%
select(family, genus, total) %>%
filter(genus %in% select_genus$genus) %>%
mutate(genus = str_replace(genus, "_", " "),
new_name = str_c(family, ": ", genus),
new_name = str_replace(new_name, " ", "<br>"))
View(genus_ds_plot)
library(tidyverse)
df_taxo <- read_tsv("rawdata/gtdbtk_all_summary.tsv") %>%
select(genome=user_genome, classification) %>%
separate(classification,
into = c("domain", "phylum", "class", "order", "family", "genues", "species"),
sep = ";") %>%
select(genome, phylum) %>%
mutate(phylum=str_remove(phylum, "p__"))
df_phages <- read_tsv("rawdata/mapping_rumen_phages.txt") %>%
select(phage, family)
View(df_phages)
df_cas <- read_tsv("rawdata/spacers_match_proviruses.txt") %>%
select(c(1:2))
View(df_cas)
View(df_cas)
df_cas <- read_tsv("rawdata/spacers_match_proviruses.txt")
View(df_cas)
df_cas <- read_tsv("rawdata/spacers_match_proviruses.txt") %>%
select(c(1:2))
View(df_cas)
df_clean <- df_cas %>%
mutate(genome = str_remove(genome, "_scaffold.*"),
genome = str_remove(genome, "_scf.*"),
genome = str_remove(genome, "_[1-9].*")) %>%
unique() %>%
inner_join(df_taxo, by = "genome") %>%
left_join(df_phages, by = "phage")
df_cas <- read_tsv("rawdata/spacers_match_proviruses.txt") %>%
select(c(1:2))
colnames(df_cas) <- c("genome", "phage")
df_clean <- df_cas %>%
mutate(genome = str_remove(genome, "_scaffold.*"),
genome = str_remove(genome, "_scf.*"),
genome = str_remove(genome, "_[1-9].*")) %>%
unique() %>%
inner_join(df_taxo, by = "genome") %>%
left_join(df_phages, by = "phage")
View(df_clean)
df_clean %>%  count(phage)
df_clean %>%  select(phage) %>%  count()
df_clean %>%  select(phage) %>%  unique()
df_clean %>%  select(phage) %>%  unique() %>%  count()
df_clean %>%  select(genome) %>%  unique() %>%  count()
